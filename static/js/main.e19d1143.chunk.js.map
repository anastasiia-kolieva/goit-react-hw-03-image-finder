{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","App.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["module","exports","Searchbar","state","searchWord","handlerChange","event","setState","target","value","handelSubmit","preventDefault","props","onSubmit","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","ImageGalleryItemImage","ImageGallery","imagesArray","map","image","webformatURL","tags","id","Button","onClickHandle","buttonWrapper","onClick","keyApi","App","currentPage","searchImage","onChangeSearchWord","fetchImages","fetch","then","responce","json","data","prevState","hits","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uIACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,mCAAmC,mBAAmB,sC,qBCAtSD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,gDAAgD,yBAAyB,mD,gBCAjLD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,OAAS,yB,kBCAzED,EAAOC,QAAU,CAAC,aAAe,qC,uCCAjCD,EAAOC,QAAU,CAAC,IAAM,mB,oJC0CTC,E,4MAvCbC,MAAQ,CACNC,WAAY,I,EAGdC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAAOC,S,EAG3CC,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,YAE/B,EAAKG,SAAS,CAAEH,WAAY,M,uDAI5B,OACE,wBAAQU,UAAWC,IAAEb,UAArB,SACE,uBAAMY,UAAWC,IAAEC,WAAYH,SAAUI,KAAKP,aAA9C,UACE,wBAAQQ,KAAK,SAASJ,UAAWC,IAAEI,iBAAnC,SACE,sBAAML,UAAWC,IAAEK,sBAAnB,sBAGF,uBACEN,UAAWC,IAAEM,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZf,MAAOQ,KAAKd,MAAMC,WAClBqB,SAAUR,KAAKZ,yB,GAhCHqB,a,iCCaTC,EAbU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAC/B,OACE,oBAAIf,UAAWC,IAAEY,iBAAjB,SACE,qBAAKb,UAAWC,IAAEe,sBAAuBF,IAAKA,EAAKC,IAAKA,OCoB/CE,EAtBM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,OACE,oBAAIlB,UAAWC,IAAEgB,aAAjB,SACGC,EAAYC,KAAI,SAAAC,GAAK,OACpB,cAAC,EAAD,CAEEN,IAAKM,EAAMC,aACXN,IAAKK,EAAME,MAFNF,EAAMG,U,gBCGNC,EAVA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAChB,OACI,qBAAKzB,UAAWC,IAAEyB,cAAlB,SACF,wBAAQtB,KAAK,SAASuB,QAASF,EAAezB,UAAWC,IAAEuB,OAA3D,0BCEEI,EAAS,qCAqDAC,E,4MAlDbxC,MAAQ,CACN6B,YAAa,GACbY,YAAa,EACbC,YAAa,I,EAYfC,mBAAqB,SAAA1C,GAInB,EAAKG,SAAS,CAAEsC,YAAazC,EAAYwC,YAAa,EAAGZ,YAAa,M,EAGxEe,YAAc,WAAO,IAAD,EACmB,EAAK5C,MAAlCyC,EADU,EACVA,YAAaC,EADH,EACGA,YACrBG,MAAM,8BAAD,OAC2BH,EAD3B,iBAC+CD,EAD/C,gBACkEF,EADlE,yDAGFO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAK7C,UAAS,SAAA8C,GAAS,MAAK,CAC1BrB,YAAY,GAAD,mBAAMqB,EAAUrB,aAAhB,YAAgCoB,EAAKE,OAEhDV,YAAaS,EAAUT,YAAc,U,iEA1B1BS,GAIbA,EAAUR,cAAgB5B,KAAKd,MAAM0C,aACvC5B,KAAK8B,gB,+BA0BC,IACAf,EAAgBf,KAAKd,MAArB6B,YACR,OACE,gCACE,cAAC,EAAD,CAAWnB,SAAUI,KAAK6B,qBAC1B,cAAC,EAAD,CAAcd,YAAaA,IAE1BA,EAAYuB,OAAS,GAAK,cAAC,EAAD,CAAQhB,cAAetB,KAAK8B,qB,GA7C7CrB,aCJlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e19d1143.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__37IAF\",\"SearchForm\":\"Searchbar_SearchForm__1otOm\",\"SearchFormButton\":\"Searchbar_SearchFormButton__8Ef1W\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3d3__\",\"SearchFormInput\":\"Searchbar_SearchFormInput__30uwG\",\"SearchForm-input\":\"Searchbar_SearchForm-input__8gENr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2UJF_\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2EpH2\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1ZyvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Button_buttonWrapper__vHG55\",\"Button\":\"Button_Button__2754l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3K8bq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__g8ppj\"};","import { Component } from 'react';\nimport s from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    searchWord: '',\n  };\n\n  handlerChange = event => {\n    this.setState({ searchWord: event.target.value });\n  };\n\n  handelSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.searchWord);\n    \n    this.setState({ searchWord: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handelSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchWord}\n            onChange={this.handlerChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ src, alt }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img className={s.ImageGalleryItemImage} src={src} alt={alt} />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ imagesArray }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {imagesArray.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          src={image.webformatURL}\n          alt={image.tags}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  imagesArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import s from './Button.module.css'\r\n\r\nconst Button = ({ onClickHandle }) => {\r\n  return (\r\n      <div className={s.buttonWrapper}>\r\n    <button type='button' onClick={onClickHandle} className={s.Button}>\r\n      Load More\r\n    </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\nimport './App.module.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\n\n// ключь API\nconst keyApi = '18681025-f668a3aca189dfba87ba57015';\n\nclass App extends Component {\n  state = {\n    imagesArray: [],\n    currentPage: 1,\n    searchImage: '',\n  };\n\n  componentDidUpdate(prevState) {\n    // необходимо при пролистывании(нажатия на кнопку\"догрузить\"). Сохранение слова-поиска асинхронно, а функция\n    // фетча синхронна, потому выполняется первее.\n    // вызов функции fetchImages будет только тогда когда в searchImage будет новое значение\n    if (prevState.searchImage !== this.state.searchImage) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeSearchWord = searchWord => {\n    // когда получаем слово для поиска картинки, сохраняем в стейт это слово для последующего\n    // перелистывания(нажатия на кнопку\"догрузить\")\n    // сбрасываем в исходное состояние currentPage и imagesArray, в случае нового ввода нового слова поиска\n    this.setState({ searchImage: searchWord, currentPage: 1, imagesArray: [] });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchImage } = this.state;\n    fetch(\n      `https://pixabay.com/api/?q=${searchImage}&page=${currentPage}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n      .then(responce => responce.json())\n      .then(data => {\n        this.setState(prevState => ({\n          imagesArray: [...prevState.imagesArray, ...data.hits],\n          // увеличить отображаемую страницуна +1\n          currentPage: prevState.currentPage + 1,\n        }));\n      });\n  };\n\n  render() {\n    const { imagesArray } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.onChangeSearchWord} />\n        <ImageGallery imagesArray={imagesArray} />\n\n        {imagesArray.length > 0 && <Button onClickHandle={this.fetchImages} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}