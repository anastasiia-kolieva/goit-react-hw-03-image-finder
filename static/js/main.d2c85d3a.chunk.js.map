{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/Searchbar.module.css","App.module.css"],"names":["module","exports","Searchbar","state","searchWord","handlerChange","event","setState","target","value","handelSubmit","preventDefault","props","onSubmit","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","imageClick","largeSrc","ImageGalleryItemImage","data-url","onClick","ImageGallery","imagesArray","handlerImageClick","map","image","webformatURL","tags","largeImageURL","id","Button","onClickHandle","buttonWrapper","modalRoot","document","querySelector","Modal","handelKeyDown","code","onClose","handelOverlayClick","currentTarget","window","addEventListener","removeEventListener","createPortal","Overlay","children","keyApi","App","currentPage","searchQuery","isLoading","pageCords","showModal","clickedImageUrl","onChangeSearchWord","fetchImages","cords","documentElement","scrollHeight","scrollTo","top","behavior","fetch","then","responce","json","data","prevState","hits","catch","alert","text","finally","toggleModal","onImageClick","nodeName","dataset","url","console","log","prevProps","loaderWrapper","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2c85d3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2UJF_\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2EpH2\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1ZyvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Button_buttonWrapper__vHG55\",\"Button\":\"Button_Button__2754l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__zerv8\",\"Modal\":\"Modal_Modal__3K0D-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3K8bq\"};","import { Component } from 'react';\nimport s from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    searchWord: '',\n  };\n\n  handlerChange = event => {\n    this.setState({ searchWord: event.target.value });\n  };\n\n  handelSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.searchWord);\n\n    this.setState({ searchWord: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handelSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchWord}\n            onChange={this.handlerChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ src, alt, imageClick, largeSrc }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        src={src}\n        alt={alt}\n        data-url={largeSrc}\n        onClick={imageClick}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ imagesArray, handlerImageClick }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {imagesArray.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          src={image.webformatURL}\n          alt={image.tags}\n          imageClick={handlerImageClick}\n          largeSrc={image.largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  imagesArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import s from './Button.module.css';\n\nconst Button = ({ onClickHandle }) => {\n  return (\n    <div className={s.buttonWrapper}>\n      <button type=\"button\" onClick={onClickHandle} className={s.Button}>\n        Load More\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    // слушатель событий на window, для закрытия модалки при нажатии на Esc\n    window.addEventListener('keydown', this.handelKeyDown);\n  }\n\n  //   при размонтировании снимать слушатель.Почистила\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handelKeyDown);\n  }\n\n  handelKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  //   закрытие модалки при клике на серый фон\n  handelOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handelOverlayClick}>\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { alert } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport './App.module.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport s from './App.module.css';\n\n// ключь API\nconst keyApi = '18681025-f668a3aca189dfba87ba57015';\n\nclass App extends Component {\n  state = {\n    imagesArray: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    // верхние кординаты страницы(для скрола)\n    pageCords: 0,\n    showModal: false,\n    clickedImageUrl: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // необходимо при пролистывании(нажатия на кнопку\"догрузить\"). Сохранение слова-поиска асинхронно, а функция\n    // фетча синхронна, потому выполняется первее.\n    // вызов функции fetchImages будет только тогда когда в searchImage будет новое значение\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.setState({ imagesArray: [] }, this.fetchImages);\n    }\n  }\n\n  onChangeSearchWord = searchWord => {\n    // когда получаем слово для поиска картинки, сохраняем в стейт это слово для последующего\n    // перелистывания(нажатия на кнопку\"догрузить\")\n    // сбрасываем в исходное состояние currentPage и imagesArray, в случае нового ввода нового слова поиска\n    this.setState({ searchQuery: searchWord, currentPage: 1, imagesArray: [] });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery, pageCords } = this.state;\n    const cords = document.documentElement.scrollHeight;\n    // загрузщик + новые кординаты для скрола\n    this.setState({ isLoading: true, pageCords: cords });\n    // scroll\n    window.scrollTo({\n      top: pageCords,\n      behavior: 'smooth',\n    });\n\n    fetch(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n      .then(responce => responce.json())\n      .then(data => {\n        this.setState(prevState => ({\n          imagesArray: [...prevState.imagesArray, ...data.hits],\n          // увеличить отображаемую страницуна +1\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(() =>\n        alert({\n          text: 'Error! Please try again.',\n        }),\n      )\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  // метод для инверсии значения showModal\n  toggleModal = () => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n    }));\n  };\n\n  onImageClick = event => {\n    // Проверка клика ИМЕННО по изображению\n    if (event.target.nodeName !== 'IMG') {\n      console.log('Did not push on the image!');\n      return;\n    }\n\n    // получила ссылку на нажатую картинку\n    // записываю ссылку на нажатую картинку в state.clickedImageUrl\n    this.setState({ clickedImageUrl: event.target.dataset.url });\n    // открываю модалку\n    this.toggleModal();\n  };\n\n  render() {\n    const { imagesArray, isLoading, showModal, clickedImageUrl } = this.state;\n    return (\n      <div className={s.App}>\n        <Searchbar onSubmit={this.onChangeSearchWord} />\n        <ImageGallery\n          imagesArray={imagesArray}\n          handlerImageClick={this.onImageClick}\n        />\n        {isLoading && (\n          <div className={s.loaderWrapper}>\n            <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n          </div>\n        )}\n        {imagesArray.length > 0 && <Button onClickHandle={this.fetchImages} />}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img\n              src={clickedImageUrl}\n              alt=\"\"\n              width=\"1200\"\n              height=\"800\"\n              onClick={this.toggleModal}\n            />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__37IAF\",\"SearchForm\":\"Searchbar_SearchForm__1otOm\",\"SearchFormButton\":\"Searchbar_SearchFormButton__8Ef1W\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3d3__\",\"SearchFormInput\":\"Searchbar_SearchFormInput__30uwG\",\"SearchForm-input\":\"Searchbar_SearchForm-input__8gENr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__g8ppj\",\"loaderWrapper\":\"App_loaderWrapper__12qnf\"};"],"sourceRoot":""}